{"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101068855/src/index.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101068855/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":28}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":27}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":27}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":25}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}},"15":{"start":{"line":35,"column":0},"end":{"line":107,"column":3}},"16":{"start":{"line":64,"column":8},"end":{"line":82,"column":9}},"17":{"start":{"line":65,"column":12},"end":{"line":65,"column":71}},"18":{"start":{"line":71,"column":12},"end":{"line":81,"column":15}},"19":{"start":{"line":72,"column":16},"end":{"line":80,"column":17}},"20":{"start":{"line":73,"column":20},"end":{"line":73,"column":57}},"21":{"start":{"line":79,"column":20},"end":{"line":79,"column":84}},"22":{"start":{"line":86,"column":8},"end":{"line":105,"column":9}},"23":{"start":{"line":87,"column":12},"end":{"line":87,"column":65}},"24":{"start":{"line":90,"column":22},"end":{"line":90,"column":114}},"25":{"start":{"line":91,"column":23},"end":{"line":91,"column":51}},"26":{"start":{"line":95,"column":12},"end":{"line":104,"column":21}},"27":{"start":{"line":96,"column":16},"end":{"line":103,"column":19}},"28":{"start":{"line":97,"column":20},"end":{"line":102,"column":21}},"29":{"start":{"line":98,"column":24},"end":{"line":98,"column":61}},"30":{"start":{"line":101,"column":24},"end":{"line":101,"column":74}},"31":{"start":{"line":111,"column":0},"end":{"line":153,"column":3}},"32":{"start":{"line":137,"column":8},"end":{"line":151,"column":9}},"33":{"start":{"line":138,"column":22},"end":{"line":138,"column":114}},"34":{"start":{"line":139,"column":23},"end":{"line":139,"column":51}},"35":{"start":{"line":140,"column":12},"end":{"line":147,"column":15}},"36":{"start":{"line":141,"column":16},"end":{"line":146,"column":17}},"37":{"start":{"line":142,"column":20},"end":{"line":142,"column":57}},"38":{"start":{"line":145,"column":20},"end":{"line":145,"column":71}},"39":{"start":{"line":150,"column":12},"end":{"line":150,"column":65}},"40":{"start":{"line":157,"column":0},"end":{"line":197,"column":3}},"41":{"start":{"line":168,"column":8},"end":{"line":195,"column":9}},"42":{"start":{"line":169,"column":12},"end":{"line":169,"column":51}},"43":{"start":{"line":170,"column":12},"end":{"line":191,"column":15}},"44":{"start":{"line":171,"column":16},"end":{"line":190,"column":17}},"45":{"start":{"line":172,"column":20},"end":{"line":172,"column":57}},"46":{"start":{"line":175,"column":20},"end":{"line":189,"column":23}},"47":{"start":{"line":176,"column":34},"end":{"line":176,"column":70}},"48":{"start":{"line":177,"column":24},"end":{"line":179,"column":25}},"49":{"start":{"line":178,"column":28},"end":{"line":178,"column":65}},"50":{"start":{"line":180,"column":24},"end":{"line":182,"column":25}},"51":{"start":{"line":181,"column":28},"end":{"line":181,"column":62}},"52":{"start":{"line":183,"column":24},"end":{"line":185,"column":25}},"53":{"start":{"line":184,"column":28},"end":{"line":184,"column":64}},"54":{"start":{"line":186,"column":24},"end":{"line":188,"column":25}},"55":{"start":{"line":187,"column":28},"end":{"line":187,"column":63}},"56":{"start":{"line":194,"column":12},"end":{"line":194,"column":67}},"57":{"start":{"line":201,"column":0},"end":{"line":225,"column":3}},"58":{"start":{"line":217,"column":8},"end":{"line":223,"column":9}},"59":{"start":{"line":218,"column":12},"end":{"line":218,"column":69}},"60":{"start":{"line":219,"column":12},"end":{"line":219,"column":81}},"61":{"start":{"line":222,"column":12},"end":{"line":222,"column":94}},"62":{"start":{"line":229,"column":0},"end":{"line":265,"column":3}},"63":{"start":{"line":245,"column":8},"end":{"line":263,"column":9}},"64":{"start":{"line":246,"column":12},"end":{"line":246,"column":55}},"65":{"start":{"line":247,"column":22},"end":{"line":247,"column":66}},"66":{"start":{"line":248,"column":12},"end":{"line":250,"column":13}},"67":{"start":{"line":249,"column":16},"end":{"line":249,"column":52}},"68":{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},"69":{"start":{"line":252,"column":16},"end":{"line":252,"column":49}},"70":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"71":{"start":{"line":255,"column":16},"end":{"line":255,"column":51}},"72":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"73":{"start":{"line":258,"column":16},"end":{"line":258,"column":50}},"74":{"start":{"line":262,"column":12},"end":{"line":262,"column":94}},"75":{"start":{"line":266,"column":0},"end":{"line":266,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":42},"end":{"line":17,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":14},"end":{"line":20,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":15},"end":{"line":23,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":14},"end":{"line":26,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":15},"end":{"line":29,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":18},"end":{"line":106,"column":5}},"line":60},"6":{"name":"(anonymous_6)","decl":{"start":{"line":71,"column":62},"end":{"line":71,"column":63}},"loc":{"start":{"line":71,"column":71},"end":{"line":81,"column":13}},"line":71},"7":{"name":"(anonymous_7)","decl":{"start":{"line":95,"column":23},"end":{"line":95,"column":24}},"loc":{"start":{"line":95,"column":29},"end":{"line":104,"column":13}},"line":95},"8":{"name":"(anonymous_8)","decl":{"start":{"line":96,"column":85},"end":{"line":96,"column":86}},"loc":{"start":{"line":96,"column":94},"end":{"line":103,"column":17}},"line":96},"9":{"name":"(anonymous_9)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":18},"end":{"line":152,"column":5}},"line":136},"10":{"name":"(anonymous_10)","decl":{"start":{"line":140,"column":81},"end":{"line":140,"column":82}},"loc":{"start":{"line":140,"column":90},"end":{"line":147,"column":13}},"line":140},"11":{"name":"(anonymous_11)","decl":{"start":{"line":167,"column":4},"end":{"line":167,"column":5}},"loc":{"start":{"line":167,"column":18},"end":{"line":196,"column":5}},"line":167},"12":{"name":"(anonymous_12)","decl":{"start":{"line":170,"column":46},"end":{"line":170,"column":47}},"loc":{"start":{"line":170,"column":62},"end":{"line":191,"column":13}},"line":170},"13":{"name":"(anonymous_13)","decl":{"start":{"line":175,"column":34},"end":{"line":175,"column":35}},"loc":{"start":{"line":175,"column":45},"end":{"line":189,"column":21}},"line":175},"14":{"name":"(anonymous_14)","decl":{"start":{"line":216,"column":4},"end":{"line":216,"column":5}},"loc":{"start":{"line":216,"column":18},"end":{"line":224,"column":5}},"line":216},"15":{"name":"(anonymous_15)","decl":{"start":{"line":244,"column":4},"end":{"line":244,"column":5}},"loc":{"start":{"line":244,"column":18},"end":{"line":264,"column":5}},"line":244}},"branchMap":{"0":{"loc":{"start":{"line":64,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":82,"column":9}},{"start":{"line":64,"column":8},"end":{"line":82,"column":9}}],"line":64},"1":{"loc":{"start":{"line":72,"column":16},"end":{"line":80,"column":17}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":80,"column":17}},{"start":{"line":72,"column":16},"end":{"line":80,"column":17}}],"line":72},"2":{"loc":{"start":{"line":86,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":105,"column":9}},{"start":{"line":86,"column":8},"end":{"line":105,"column":9}}],"line":86},"3":{"loc":{"start":{"line":97,"column":20},"end":{"line":102,"column":21}},"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":102,"column":21}},{"start":{"line":97,"column":20},"end":{"line":102,"column":21}}],"line":97},"4":{"loc":{"start":{"line":137,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":151,"column":9}},{"start":{"line":137,"column":8},"end":{"line":151,"column":9}}],"line":137},"5":{"loc":{"start":{"line":141,"column":16},"end":{"line":146,"column":17}},"type":"if","locations":[{"start":{"line":141,"column":16},"end":{"line":146,"column":17}},{"start":{"line":141,"column":16},"end":{"line":146,"column":17}}],"line":141},"6":{"loc":{"start":{"line":168,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":195,"column":9}},{"start":{"line":168,"column":8},"end":{"line":195,"column":9}}],"line":168},"7":{"loc":{"start":{"line":171,"column":16},"end":{"line":190,"column":17}},"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":190,"column":17}},{"start":{"line":171,"column":16},"end":{"line":190,"column":17}}],"line":171},"8":{"loc":{"start":{"line":177,"column":24},"end":{"line":179,"column":25}},"type":"if","locations":[{"start":{"line":177,"column":24},"end":{"line":179,"column":25}},{"start":{"line":177,"column":24},"end":{"line":179,"column":25}}],"line":177},"9":{"loc":{"start":{"line":180,"column":24},"end":{"line":182,"column":25}},"type":"if","locations":[{"start":{"line":180,"column":24},"end":{"line":182,"column":25}},{"start":{"line":180,"column":24},"end":{"line":182,"column":25}}],"line":180},"10":{"loc":{"start":{"line":183,"column":24},"end":{"line":185,"column":25}},"type":"if","locations":[{"start":{"line":183,"column":24},"end":{"line":185,"column":25}},{"start":{"line":183,"column":24},"end":{"line":185,"column":25}}],"line":183},"11":{"loc":{"start":{"line":186,"column":24},"end":{"line":188,"column":25}},"type":"if","locations":[{"start":{"line":186,"column":24},"end":{"line":188,"column":25}},{"start":{"line":186,"column":24},"end":{"line":188,"column":25}}],"line":186},"12":{"loc":{"start":{"line":217,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":223,"column":9}},{"start":{"line":217,"column":8},"end":{"line":223,"column":9}}],"line":217},"13":{"loc":{"start":{"line":245,"column":8},"end":{"line":263,"column":9}},"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":263,"column":9}},{"start":{"line":245,"column":8},"end":{"line":263,"column":9}}],"line":245},"14":{"loc":{"start":{"line":248,"column":12},"end":{"line":250,"column":13}},"type":"if","locations":[{"start":{"line":248,"column":12},"end":{"line":250,"column":13}},{"start":{"line":248,"column":12},"end":{"line":250,"column":13}}],"line":248},"15":{"loc":{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},"type":"if","locations":[{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},{"start":{"line":251,"column":12},"end":{"line":253,"column":13}}],"line":251},"16":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{"line":254,"column":12},"end":{"line":256,"column":13}}],"line":254},"17":{"loc":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},{"start":{"line":257,"column":12},"end":{"line":259,"column":13}}],"line":257}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101068855/src/index.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101068855/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as chalk from 'chalk';\nimport * as yargs from 'yargs';\nimport * as path from 'path';\n/**\n * Class JsonObject\n */\nexport class JsonObject{\n  constructor(private user: string, private title: string, private body: string, private color: string ){}\n  getUser(){\n    return this.user;\n  }\n  getTitle(){\n    return this.title;\n  }\n  getBody(){\n    return this.body;\n  }\n  getColor(){\n    return this.color;\n  }\n}\n\n/**\n * Commands add\n */\nyargs.command({\n  command: 'add',\n  describe: 'Add a new note',\n  builder: {\n    title: {\n      describe: 'Note title',\n      demandOption: true,\n      type: 'string',\n    },\n    user: {\n      describe: 'Name user',\n      demandOption: true,\n      type: 'string',\n    },\n    body: {\n      describe: 'Body of the note',\n      demandOption: true,\n      type: 'string',\n    },\n    color: {\n      describe: 'Color of the letters',\n      demandOption: true,\n      type: 'string',\n    }\n  },\n  handler(argv) {\n    /**\n     * Conditional to get if the user exists\n     */\n    if (fs.existsSync(`./dist/${argv.user}`)){\n      console.log(chalk.green(`Dir ./dist/${argv.user} exists`));\n    }\n    else{\n      /**\n       * If it user doesn't exists, it makes an new directory with the username\n       */\n      fs.mkdir(path.join(__dirname, String(argv.user)), (err) => {\n        if (err) {\n          return console.error(chalk.red(err));\n        }\n        else {\n          /**\n           * If there it's no errors in the directory creation, we will be notified by console \n           */\n          console.log(chalk.green(`Created dir ${argv.user} at ./dist/`));\n        }\n      });\n    }\n    /**\n     * It seeks if the file exists\n     */\n    if (fs.existsSync(`./dist/${argv.user}/${argv.title}.json`)){\n      console.error(chalk.red('This file already exists'));\n    }\n    else{\n    let obj = new JsonObject(String(argv.user), String(argv.title), String(argv.body), String(argv.color));\n    let json = JSON.stringify(obj, null, 2);\n      /**\n       * Without timeout the code will be executed at the same time\n       */\n      setTimeout(() => {\n        fs.writeFile(`./dist/${argv.user}/${argv.title}.json`, json, 'utf8', (err) => {\n          if (err) {\n            return console.error(chalk.red(err));\n          }\n          else{\n            console.log(chalk.green(`Created ${argv.title}`));\n          }\n        });\n      }, 1000);\n    }\n},\n});\n\n/**\n * Commands modify\n */\nyargs.command({\n  command: 'mod',\n  describe: 'Modify a note',\n  builder: {\n    title: {\n      describe: 'Note title',\n      demandOption: true,\n      type: 'string',\n    },\n    user: {\n      describe: 'Username',\n      demandOption: true,\n      type: 'string',\n    },\n    body: {\n      describe: 'Body of the note',\n      demandOption: true,\n      type: 'string',\n    },\n    color: {\n      describe: 'Color of the letters',\n      demandOption: true,\n      type: 'string',\n    }\n  },\n  handler(argv) {\n    if (fs.existsSync(`./dist/${argv.user}/${argv.title}.json`)){\n      let obj = new JsonObject(String(argv.user), String(argv.title), String(argv.body), String(argv.color));\n      let json = JSON.stringify(obj, null, 2);\n\n      fs.writeFile(`./dist/${argv.user}/${argv.title}.json`, json, 'utf8', (err) => {\n        if (err) {\n          return console.error(chalk.red(err));\n        }\n        else{\n          console.log(chalk.green(`Modified ${argv.title}`));\n        }\n      });\n    }\n    else{\n      console.error(chalk.red(`This file doesn't exists`));\n    }\n},\n});\n/**\n * Commands list\n */\nyargs.command({\n  command: 'list',\n  describe: 'Lists all users notes',\n  builder: {\n    user: {\n      describe: 'Username',\n      demandOption: true,\n      type: 'string',\n    } \n  },\n  handler(argv) {\n    if (fs.existsSync(`./dist/${argv.user}`)){\n      console.log(chalk.green(`Your notes`));\n      fs.readdir(`./dist/${argv.user}`, (err, files) => {\n        if (err) {\n          return console.error(chalk.red(err));\n        }\n        else {\n          files.forEach(element => {\n          let obj = require(`./${argv.user}/${element}`);\n          if (obj.color === 'yellow'){\n            console.log(chalk.yellow(obj.title));\n          }\n          if (obj.color === 'red'){\n            console.log(chalk.red(obj.title));\n          }\n          if (obj.color === 'green'){\n            console.log(chalk.green(obj.title));\n          }\n          if (obj.color === 'blue'){\n            console.log(chalk.blue(obj.title));\n          }\n          });\n        }\n      });\n    }\n    else{\n      console.error(chalk.red(`Invalid user: ${argv.user}`));\n    }\n  }\n});\n\n/**\n * Commands remove\n */\nyargs.command({\n  command: 'remove',\n  describe: 'remove an user note',\n  builder: {\n    user: {\n      describe: 'Username',\n      demandOption: true,\n      type: 'string',\n    }, \n    title: {\n      describe: 'Note title to delete',\n      demandOption: true,\n      type: 'string',\n    }\n  },\n  handler(argv) {\n    if (fs.existsSync(`./dist/${argv.user}/${argv.title}.json`)){\n      fs.promises.rm(`./dist/${argv.user}/${argv.title}.json`);\n      console.log(chalk.green(`Note: ${argv.user}/${argv.title} removed`));\n    }\n    else{\n      console.error(chalk.red(`Invalid user: ${argv.user} or filename: ${argv.title}`));\n    }\n  }\n});\n\n/**\n * Commands read\n */\nyargs.command({\n  command: 'read',\n  describe: 'Read an user note',\n  builder: {\n    user: {\n      describe: 'Username',\n      demandOption: true,\n      type: 'string',\n    },\n    title: {\n      describe: 'Note title to read',\n      demandOption: true,\n      type: 'string',\n    } \n  },\n  handler(argv) {\n    if (fs.existsSync(`./dist/${argv.user}/${argv.title}.json`)){\n      console.log(chalk.green(`${argv.title}:`));      \n      let obj = require(`./${argv.user}/${argv.title}.json`);\n      if (obj.color === 'yellow'){\n        console.log(chalk.yellow(obj.body));\n      }\n      if (obj.color === 'red'){\n        console.log(chalk.red(obj.body));\n      }\n      if (obj.color === 'green'){\n        console.log(chalk.green(obj.body));\n      }\n      if (obj.color === 'blue'){\n        console.log(chalk.blue(obj.body));\n      }\n    }\n    else{\n      console.error(chalk.red(`Invalid user: ${argv.user} or filename: ${argv.title}`));\n    }\n  }\n});\n\nyargs.parse();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1915ca1e49dd2d7dbdc51d0854bca6eaaaa2b356","contentHash":"1bb00311448d67954b5bbc9aba1315aa71fab7e57113b365ab0f37bfe80772b6"}}